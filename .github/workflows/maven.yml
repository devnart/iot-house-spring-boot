# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install

    - uses: mr-smithers-excellent/docker-build-push@v5
      name: Build & push Docker image
      with:
            image: devnart/iot
            tags: v1, latest
            registry: docker.io
            dockerfile: Dockerfile
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

    - uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
      name: build and deploy to heroku
      with:
        # Below you must provide variables for your Heroku app.

        # The email address associated with your Heroku account.
        # If you don't want to use repository secrets (which is recommended) you can do:
        # email: my.email@example.com
        email: ${{ secrets.HEROKU_EMAIL }}

        # Heroku API key associated with provided user's email.
        # Api Key is available under your Heroku account settings.
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}

        # Name of the heroku application to which the build is to be sent.
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

        # (Optional, default: "./")
        # Dockerfile directory.
        # For example, if you have a Dockerfile in the root of your project, leave it as follows:
        dockerfile_directory: ./

        # (Optional, default: "Dockerfile")
        # Dockerfile name.
        dockerfile_name: Dockerfile

        # (Optional, default: "")
        # Additional options of docker build command.
        docker_options: "--no-cache"

        # (Optional, default: "web")
        # Select the process type for which you want the docker container to be uploaded.
        # By default, this argument is set to "web".
        # For more information look at https://devcenter.heroku.com/articles/process-model
        process_type: web
